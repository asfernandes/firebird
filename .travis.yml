matrix:
  include:
  - os: osx
    osx_image: xcode9.2
  - os: linux 

language: cpp

notifications:
  email: false

sudo: required
dist: trusty

branches:
  only:
    - master
    - B3_0_Release
install:
  # wget --no-check-certificate https://www.cmake.org/files/v3.2/cmake-3.2.3-Linux-x86_64.sh
  # sudo sh cmake-3.2.3-Linux-x86_64.sh --skip-license --prefix=/usr 
  - |  
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
      sudo apt-get update
      sudo apt-get install -y libtommath0 libtommath-dev libtomcrypt0 libtomcrypt-dev
    fi   
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update
      brew install make libtool autoconf libtommath libtool   
    fi
  # sudo python -m pip install Mako fdb
  # svn co http://svn.code.sf.net/p/firebird/code/qa/fbtest/trunk/ fbtest
  # svn co http://svn.code.sf.net/p/firebird/code/qa/fbt-repository/trunk/ fbtest/fbt

script:
  - |  
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
      ./autogen.sh --enable-binreloc --prefix=/opt/firebird 
      make -j4 
      make dist 
      tar xzvf gen/Firebird-[0-9]*.tar.gz 
      (cd Firebird-[0-9]*; sudo ./install.sh -silent) 
      sudo usermod -a -G firebird travis
    fi 
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export LIBTOOLIZE=glibtoolize
      export LIBTOOL=glibtool
      brew list icu4c 
      brew link icu4c --force
      brew list libtommath      
      #brew install gnu-sed --with-default-names
      icu-config --cppflags --prefix
      CFLAGS=-I/usr/local/Cellar/icu4c/include
      LDFLAGS=-L/usr/local/Cellar/icu4c/lib
      DYLD_LIBRARY_PATH=/usr/local/Cellar/icu4c/lib
      export CXXFLAGS="-std=c++11 -stdlib=libc++ -Wno-c++11-narrowing -msse4"
      export CXX=clang++
      export CC=clang
      alias libtoolize=glibtoolize      
      git clone https://github.com/libtom/libtomcrypt.git
      cd libtomcrypt
      git checkout tags/v1.18.0
      make
      make install
      cd ..
      #alias sed=gsed
      which sed
      #sed --version
      #echo $PATH | grep -q '/usr/local/bin'; [ $? -ne 0 ] && export PATH=/usr/local/bin:$PATH
      #echo a | sed 's_A_X_i'
      ./autogen.sh --disable-raw-devices 
      make 
    fi 
  
  # sg firebird -c "/opt/firebird/bin/gsec -user sysdba -add sysdba -pw masterkey"
  # ./travis.sh dummy_output &
  # ./travis.sh skip_tests
  # sleep 3
  # cd fbtest/fbt
  # sg firebird -c "python ../fbtest.py -d `pwd`/tmp -b /opt/firebird/bin -v -x -k ../../skip.txt"
