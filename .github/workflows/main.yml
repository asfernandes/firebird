name: CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        #os: [ubuntu-16.04, windows-2016]
        #os: [windows-2016, macOS-latest]
        os: [macOS-latest]
        #os: [ubuntu-16.04]

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 10

    #- name: Debug session
    #  uses: uavos/action-tmate@v1

    - name: Prepare (Linux)
      if: matrix.os == 'ubuntu-16.04'
      run: |
        sudo apt-get install libtool-bin libtommath0 libtommath-dev libicu-dev zlib1g-dev

    - name: Build (Linux)
      if: matrix.os == 'ubuntu-16.04'
      run: |
        CC=clang CXX=clang++ ./autogen.sh --enable-binreloc --with-builtin-tomcrypt --prefix=/opt/firebird
        make
        make dist
        tar xzvf gen/Firebird-[0-9]*.tar.gz
        (cd Firebird-[0-9]*; sudo ./install.sh -silent)

    - name: Prepare (MacOS)
      if: matrix.os == 'macOS-latest'
      run: |
        brew install automake libtool
        #ln -s /usr/local/bin/glibtoolize /usr/local/bin/libtoolize
        #ln -s /usr/local/bin/glibtool /usr/local/bin/libtool
        export LIBTOOLIZE=glibtoolize
        export LIBTOOL=glibtool
        mkdir extern/icu-macos
        cd extern/icu-macos
        wget https://github.com/unicode-org/icu/releases/download/release-59-2/icu4c-59_2-src.tgz
        wget https://github.com/unicode-org/icu/commit/24aeb9a5a5874f4ce5db912e30670ac3ae236971.patch
        tar xzvf icu4c-59_2-src.tgz
        ICU_INSTALL_PATH=`pwd`/install
        cd icu/source
        patch -p3 < ../../24aeb9a5a5874f4ce5db912e30670ac3ae236971.patch
        ./runConfigureICU MacOSX --prefix=$ICU_INSTALL_PATH
        make -j4
        #sudo make install
        make install


    - name: Build (MacOS)
      if: matrix.os == 'macOS-latest'
      run: |
        #export PATH="/usr/local/opt/icu4c/bin:$PATH"
        #export PATH="/usr/local/opt/icu4c/sbin:$PATH"
        #export LDFLAGS="-L/usr/local/opt/icu4c/lib"
        #export CPPFLAGS="-I/usr/local/opt/icu4c/include -stdlib=libc++"
        #export CXX="g++ -I/usr/local/opt/icu4c/include -stdlib=libc++"
        ICU_INSTALL_PATH=`pwd`/extern/icu-macos/install
        export LIBTOOLIZE=glibtoolize
        export LIBTOOL=glibtool
        export C_INCLUDE_PATH="$ICU_INSTALL_PATH/include:$C_INCLUDE_PATH"
        export CPLUS_INCLUDE_PATH="$ICU_INSTALL_PATH/include:$CPLUS_INCLUDE_PATH"
        export LIBRARY_PATH="$ICU_INSTALL_PATH/lib:$LIBRARY_PATH"
        #export DYLD_LIBRARY_PATH="$ICU_INSTALL_PATH/lib:$DYLD_LIBRARY_PATH"
        #export CPPFLAGS="-stdlib=libc++"
        export CXX="g++ -stdlib=libc++"
        env
        mkdir -p gen/Release/firebird/lib
        cp $ICU_INSTALL_PATH/lib/*.dylib gen/Release/firebird/lib/
        find . -name utrans.h
        find . -name 'libicuuc*'
        ./autogen.sh --with-builtin-tommath
        make -j4
        (cd gen; make -B -f make.platform.postfix ICU_LOC="$ICU_INSTALL_PATH/lib/")
        (cd gen; make -B -f Makefile.install)

    - name: Prepare (Windows)
      if: matrix.os == 'windows-2016'
      shell: cmd
      run: |
        for /r %%i in (*.bat) do unix2dos "%%i"

    - name: Build (Windows)
      if: matrix.os == 'windows-2016'
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=amd64
        cd builds\win32
        run_all.bat JUSTBUILD

    - name: Upload (Linux)
      if: matrix.os == 'ubuntu-16.04'
      uses: actions/upload-artifact@master
      with:
        name: firebird-linux
        path: gen/Firebird-[0-9]*.tar.gz

    - name: Upload (MacOS)
      if: matrix.os == 'macOS-latest'
      uses: actions/upload-artifact@master
      with:
        name: firebird-macos
        path: gen/Release/packages

    - name: Upload (Windows)
      if: matrix.os == 'windows-2016'
      uses: actions/upload-artifact@master
      with:
        name: firebird-windows
        path: output_x64
