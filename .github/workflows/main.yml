name: CI

on: [push, pull_request]

jobs:

  build-macos:
    name: build-macos-${{ matrix.arch }}
    runs-on: ${{ (matrix.arch == 'arm64' && 'macos-14') || 'macos-13' }}
    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    strategy:
      fail-fast: false
      matrix:
        arch:
          - x64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 10
          submodules: 'true'

      - name: Adjust snapshot build number
        uses: ./.github/actions/adjust-snapshot-buildno

      - name: Prepare - Install tools
        run: |
          brew install automake autoconf-archive cmake libtool ninja

      # libcxx build is not working with python >= 3.12
      - name: Do not use preinstalled python >= 3.12
        run: |
          brew uninstall --ignore-dependencies python@3.12
          [ -e /Library/Frameworks/Python.framework ] && \
            sudo mv /Library/Frameworks/Python.framework /Library/Frameworks/Python.framework.dont-look-at-this
          brew install python@3.11
          ln -s "$(brew --prefix python@3.11)/bin/python3" "$(brew --prefix python@3.11)/bin/python"

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Build
        run: |
          export LIBTOOLIZE=glibtoolize
          export LIBTOOL=glibtool
          export PATH="$(brew --prefix python@3.11)/bin:$PATH"

          ./autogen.sh --with-builtin-tommath --with-builtin-tomcrypt
          make -j4
          make tests -j4
          make run_tests

          make -C gen -B -f make.platform.postfix
          make -C gen -B -f Makefile.install

          # Rename directory to make sure the build is relocatable.
          mv gen gen2
          sudo installer -pkg gen2/Release/*.pkg -verbose -target /

          export FIREBIRD_LOCK=`pwd`/temp
          echo "create database 't.fdb'; select '1' from rdb\$database; select _win1252 '2' from rdb\$database; select _utf8 '3' collate unicode from rdb\$database;" | /Library/Frameworks/Firebird.framework/Resources/bin/isql

          echo "create database 'localhost:/tmp/t.fdb' user sysdba password 'masterkey'; select '11' from rdb\$database; select _win1252 '22' from rdb\$database; select _utf8 '33' collate unicode from rdb\$database;" | /Library/Frameworks/Firebird.framework/Resources/bin/isql

          mv gen2 gen
          mkdir gen/artifacts
          mv gen/Release/*.pkg gen/artifacts

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: true
